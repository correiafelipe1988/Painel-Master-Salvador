/**
 * Script para normalizar e padronizar as causas de distratos
 * Mapeia causas originais para os 15 grupos sugeridos
 */

const mapeamentoCausas = {
  // Grupo 1: InadimplÃªncia/Financeiro
  "inadimplÃªncia": "InadimplÃªncia/Financeiro",
  "sem condiÃ§Ãµes financeiras": "InadimplÃªncia/Financeiro", 
  "sublocaÃ§Ã£o do veÃ­culo e inadimplÃªncia": "InadimplÃªncia/Financeiro",
  "nÃ£o pagamento de manutenÃ§Ã£o corretiva": "InadimplÃªncia/Financeiro",
  "pendÃªncia financeira": "InadimplÃªncia/Financeiro",
  "ausÃªncia de retorno": "InadimplÃªncia/Financeiro", // geralmente relacionado Ã  inadimplÃªncia
  
  // Grupo 2: QuestÃµes Pessoais do Cliente  
  "motivos pessoais": "QuestÃµes Pessoais do Cliente",
  
  // Grupo 3: Problemas Administrativos
  "sem informaÃ§Ãµes": "Problemas Administrativos",
  "Sem informaÃ§Ãµes": "Problemas Administrativos",
  
  // Grupo 4: DesistÃªncia do Cliente
  "nÃ£o adaptaÃ§Ã£o ao modelo da motocicleta": "DesistÃªncia do Cliente",
  "Desistencia": "DesistÃªncia do Cliente",
  
  // Grupo 5: Problemas Operacionais  
  "DesistÃªncia": "Problemas Operacionais",
  "LiberaÃ§Ã£o de placa": "Problemas Operacionais",
  "LiberaÃ§Ã£o de placa/desistÃªncia": "Problemas Operacionais",
  
  // Grupo 6: MudanÃ§a de NegÃ³cio
  "TROCA de moto": "MudanÃ§a de NegÃ³cio",
  "TROCA DE MOTO": "MudanÃ§a de NegÃ³cio", 
  "TROCA De MOTO": "MudanÃ§a de NegÃ³cio",
  "troca de moto": "MudanÃ§a de NegÃ³cio",
  "substituiÃ§Ã£o de moto": "MudanÃ§a de NegÃ³cio",
  "mudanÃ§a de contrato para fidelidade": "MudanÃ§a de NegÃ³cio",
  
  // Grupo 7: Problemas MecÃ¢nicos/ManutenÃ§Ã£o
  "moto reserva": "Problemas MecÃ¢nicos/ManutenÃ§Ã£o",
  "estÃ¡ com a moto reserva": "Problemas MecÃ¢nicos/ManutenÃ§Ã£o", 
  "utilizaÃ§Ã£o de moto reserva de outra franquia": "Problemas MecÃ¢nicos/ManutenÃ§Ã£o",
  "falhas tÃ©cnicas na motocicleta": "Problemas MecÃ¢nicos/ManutenÃ§Ã£o",
  "manutenÃ§Ã£o": "Problemas MecÃ¢nicos/ManutenÃ§Ã£o",
  
  // Grupo 8: Relacionamento Comercial
  "insatisfaÃ§Ã£o do cliente": "Performance InsatisfatÃ³ria",
  
  // Grupo 9: QuestÃµes Legais/RegulatÃ³rias  
  "CNH suspensa": "QuestÃµes Legais/RegulatÃ³rias",
  "uso indevido da motocicleta": "QuestÃµes Legais/RegulatÃ³rias",
  
  // Grupo 10: QuestÃµes de SaÃºde/Acidente
  "acidente": "QuestÃµes de SaÃºde/Acidente",
  
  // Grupo 11: Fatores Externos
  "LocatÃ¡rio vai viajar para fora do estado": "Fatores Externos",
  
  // Grupo 12: Problemas Contratuais
  "encerrado em comum acordo entre as partes": "Problemas Contratuais",
  "decorrÃªncia do cumprimento integral do prazo": "Problemas Contratuais",
  
  // Grupo 13: Outros/Diversos
  "uso em carater de reserva": "Outros/Diversos",
  "FIM CONTRATO": "Outros/Diversos", 
  "AlteraÃ§Ã£o": "Outros/Diversos",
  "devoluÃ§Ã£o": "Outros/Diversos"
};

/**
 * FunÃ§Ã£o para normalizar uma causa individual
 * @param {string} causaOriginal - A causa original do distrato
 * @returns {string} - O grupo normalizado
 */
function normalizarCausa(causaOriginal) {
  const causa = causaOriginal?.trim();
  
  if (!causa) {
    return "Problemas Administrativos"; // Para casos vazios
  }
  
  // Busca mapeamento direto
  if (mapeamentoCausas[causa]) {
    return mapeamentoCausas[causa];
  }
  
  // Busca por palavras-chave para casos nÃ£o mapeados
  const causaLower = causa.toLowerCase();
  
  if (causaLower.includes('inadimpl') || causaLower.includes('financ')) {
    return "InadimplÃªncia/Financeiro";
  }
  
  if (causaLower.includes('pessoal')) {
    return "QuestÃµes Pessoais do Cliente";
  }
  
  if (causaLower.includes('troca') || causaLower.includes('substitui')) {
    return "MudanÃ§a de NegÃ³cio"; 
  }
  
  if (causaLower.includes('desist') || causaLower.includes('abandon')) {
    return "DesistÃªncia do Cliente";
  }
  
  if (causaLower.includes('manut') || causaLower.includes('reserva') || causaLower.includes('tÃ©cnic')) {
    return "Problemas MecÃ¢nicos/ManutenÃ§Ã£o";
  }
  
  if (causaLower.includes('acidente') || causaLower.includes('saÃºde')) {
    return "QuestÃµes de SaÃºde/Acidente";
  }
  
  if (causaLower.includes('cnh') || causaLower.includes('legal') || causaLower.includes('indevido')) {
    return "QuestÃµes Legais/RegulatÃ³rias";
  }
  
  // Caso nÃ£o encontre correspondÃªncia, classifica como "Outros"
  console.warn(`Causa nÃ£o mapeada: "${causa}" - classificada como Outros/Diversos`);
  return "Outros/Diversos";
}

/**
 * FunÃ§Ã£o para processar um lote de distratos e normalizar as causas
 * @param {Array} distratos - Array de objetos distrato
 * @returns {Array} - Array com causas normalizadas
 */
function processarLoteDistratos(distratos) {
  return distratos.map(distrato => ({
    ...distrato,
    causaNormalizada: normalizarCausa(distrato.causa),
    causaOriginal: distrato.causa // MantÃ©m a causa original para histÃ³rico
  }));
}

/**
 * FunÃ§Ã£o para gerar estatÃ­sticas das causas normalizadas
 * @param {Array} distratos - Array de distratos processados
 * @returns {Object} - EstatÃ­sticas agrupadas
 */
function gerarEstatisticasCausas(distratos) {
  const estatisticas = {};
  const total = distratos.length;
  
  distratos.forEach(distrato => {
    const grupo = distrato.causaNormalizada;
    if (!estatisticas[grupo]) {
      estatisticas[grupo] = {
        total: 0,
        causasOriginais: {},
        percentual: 0
      };
    }
    
    estatisticas[grupo].total++;
    
    const causaOriginal = distrato.causaOriginal;
    if (!estatisticas[grupo].causasOriginais[causaOriginal]) {
      estatisticas[grupo].causasOriginais[causaOriginal] = 0;
    }
    estatisticas[grupo].causasOriginais[causaOriginal]++;
  });
  
  // Calcular percentuais
  Object.keys(estatisticas).forEach(grupo => {
    estatisticas[grupo].percentual = ((estatisticas[grupo].total / total) * 100).toFixed(1);
  });
  
  return {
    totalRegistros: total,
    estatisticasPorGrupo: estatisticas,
    ranking: Object.entries(estatisticas)
      .sort(([,a], [,b]) => b.total - a.total)
      .map(([grupo, dados]) => ({
        grupo,
        total: dados.total,
        percentual: dados.percentual
      }))
  };
}

// Exporta as funÃ§Ãµes para uso
if (typeof module !== 'undefined' && module.exports) {
  module.exports = {
    mapeamentoCausas,
    normalizarCausa,
    processarLoteDistratos,
    gerarEstatisticasCausas
  };
}

// Para uso no browser
if (typeof window !== 'undefined') {
  window.DistratoUtils = {
    mapeamentoCausas,
    normalizarCausa,
    processarLoteDistratos,
    gerarEstatisticasCausas
  };
}

console.log('ðŸ“Š Script de normalizaÃ§Ã£o de causas de distratos carregado com sucesso!');
console.log(`ðŸŽ¯ ${Object.keys(mapeamentoCausas).length} causas mapeadas para 15 grupos sugeridos`);